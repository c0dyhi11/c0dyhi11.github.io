openapi: 3.0.0
info:
  version: 0.0.1
  title: Packet Marketplace
servers:
  - url: 'https://marketplace.packet.com/v0'
security:
  - ApiKeyAuth: []

paths:
  /plans:
    get:
      tags:
        - plans
      summary: Lists all plans
      responses:
        '200':
          description: Show all deployments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/plan'
  /plans/{plan_id}:
    parameters:
      - in: path
        name: plan_id
        schema:
            type: string
        required: true
        description: Plan ID
        example: 41f6b702-aba4-4758-9094-403c41b25b6c
    get:
      tags:
        - plan
      summary: Info about a specific plan
      responses:
        '200':
          description: Show all deployments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/plans'
  /{organization_id}/deployments:
    parameters:
      - in: path
        name: organization_id
        schema:
            type: string
        required: true
        description: Packet Organization ID
        example: 41f6b702-aba4-4758-9094-403c41b25b6c
    get:
      tags:
        - deployments
      summary: Lists all deployments
      responses:
        '200':
          description: Show all deployments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment'

    post:
      tags:
        - deployments
      summary: Create new deployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deployment_request'
      responses:
        '200':
          description: deployment creating
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment'
        '400':
          description: Cannot create

  /{organization_id}/deployments/{deployment_id}:
    parameters:
      - in: path
        name: organization_id
        schema:
            type: string
        required: true
        description: Packet Project ID
        example: 41f6b702-aba4-4758-9094-403c41b25b6c
      - in: path
        name: deployment_id
        schema:
            type: string
        required: true
        description: deployment ID
        example: 8555f6e0-68e8-4238-8fba-779b21d33ab5
    get:
      tags:
        - deployment
      summary: Show deployment
      responses:
        '200':
          description: Show this deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment'
    put:
      tags:
        - deployment
      summary: Update deployment
      responses:
        '200':
          description: Update this deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment'
    delete:
      tags:
        - deployment
      summary: Delete deployment
      responses:
        '200':
          description: Delete this deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment'
  /{organization_id}/deployments/{deployment_id}/logs:
    parameters:
      - in: path
        name: organization_id
        schema:
            type: string
        required: true
        description: Packet Organization ID
        example: 41f6b702-aba4-4758-9094-403c41b25b6c
      - in: path
        name: deployment_id
        schema:
            type: string
        required: true
        description: deployment ID
        example: 8555f6e0-68e8-4238-8fba-779b21d33ab5
    get:
      tags:
        - logs
      summary: Show deployment
      responses:
        '200':
          description: Show this deployment
          content:
            text/plain:
              schema:
                type: string
                example: A ton of log data...
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Auth-Token
      description: Packet Auth Token
  schemas:
    plans:
      required: 
        - plan_id
        - plan_name
        - plan_description
      properties:
        plan_id:
          type: string
          description: The UUID of the plan
          example: 3c56de34-77a0-4d5b-ba11-dfbe4fa137f7
        plan_name:
          type: string
          description: The name of the plan
          example: My Best Plan
        plan_description:
          type: string
          description: The description of the plan
          example: This plan will deploy k3s on a server
        plan_logo:
          type: string
          description: base64 encoded blob for logo.png
          example: bG9nby5wbmc=
    plan:
      required: 
        - plan_id
        - plan_name
        - plan_description
        - plan_logo
        - plan_required_variables
        - plan_optional_variables
      properties:
        plan_id:
          type: string
          description: The UUID of the plan
          example: 3c56de34-77a0-4d5b-ba11-dfbe4fa137f7
        plan_name:
          type: string
          description: The name of the plan
          example: My Best Plan
        plan_description:
          type: string
          description: The description of the plan
          example: This plan will deploy k3s on a server
        plan_logo:
          type: string
          description: base64 encoded blob for logo.png
          example: bG9nby5wbmc=
        plan_required_variables:
          type: object
          description: Variables that are required to deploy the plan
          example: [{"name":"project_id", "type":"string","description":"Input your project id"},{"name":"server_count", "type":"number","description":"How many servers do you want?"}]
        plan_optional_variables:
          type: object
          description: Variables that already have default values that you can choose to override
          example: [{"name":"hostname", "type":"string","description":"Your servers hostname", "default" :"my-best-server"},{"name":"user_data", "type":"string","description":"Base64 encoded blob of user-data", "default": "IyEvYmluL2Jhc2gKZWNobyAnaGVsbG8gd29ybGQiID4gL3RtcC9oZWxsb193b3JsZC50eHQ="}]

    deployment:
      required:
        - deployment_id
        - deployment_status
        - deployment_name
        - plan_variables
        - deployment_outputs
        - log_url
      properties:
        deployment_id:
          type: string
          description: The unique id of the deployment
          example: 8555f6e0-68e8-4238-8fba-779b21d33ab5
        deployment_status:
          type: string
          description: The status of the deployment
          example: Complete
        deployment_name:
          type: string
          description: The friendly name of the deployment
          example: My Best deployment
        log_url:
          type: string
          description: Url to view logs
          example: https://marketplace.packet.com/organization/41f6b702-aba4-4758-9094-403c41b25b6c/deployments/8555f6e0-68e8-4238-8fba-779b21d33ab5/logs
        plan_variables:
          type: object
          description: The variables used to create this deployment
          example: {"facility": "ewr1"}
        deployment_outputs:
          type: object
          description: The outputs of the plan
          example: [{"facility": "ewr1"}, {"plan": "t1.small.x86"}]
    deployment_request:
      required:
        - deployment_name
        - plan_id
      properties:
        deployment_name:
          type: string
          description: What you would like to name your deployment?
          example: My Best deployment
        plan_id:
          type: string
          description: Which plan would you like to deploy?
          example: 07914953-7015-4147-8539-a6e60e943f26
        plan_variables:
          type: object
          description: Provide a json object of variables for your deployment.
          example: {"facility": "ewr1"}
